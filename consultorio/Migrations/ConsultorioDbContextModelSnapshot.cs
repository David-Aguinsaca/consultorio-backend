// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using consultorio.Models;

#nullable disable

namespace consultorio.Migrations
{
    [DbContext(typeof(ConsultorioDbContext))]
    partial class ConsultorioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("consultorio.Models.Document", b =>
                {
                    b.Property<int>("Iddocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iddocument"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extenextension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idinsured")
                        .HasColumnType("int");

                    b.Property<int>("IdinsuredNavigationIdinsured")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Iddocument");

                    b.HasIndex("IdinsuredNavigationIdinsured");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("consultorio.Models.Insured", b =>
                {
                    b.Property<int>("Idinsured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idinsured"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idinsured");

                    b.ToTable("Insureds");
                });

            modelBuilder.Entity("consultorio.Models.Sure", b =>
                {
                    b.Property<int>("Idsure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsure"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prima")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sumassured")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Idsure");

                    b.ToTable("Sures");
                });

            modelBuilder.Entity("consultorio.Models.SureInsured", b =>
                {
                    b.Property<int>("Idsure")
                        .HasColumnType("int");

                    b.Property<int>("Idinsured")
                        .HasColumnType("int");

                    b.HasKey("Idsure", "Idinsured");

                    b.HasIndex("Idinsured");

                    b.ToTable("SureInsureds");
                });

            modelBuilder.Entity("consultorio.Models.Document", b =>
                {
                    b.HasOne("consultorio.Models.Insured", "IdinsuredNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdinsuredNavigationIdinsured")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdinsuredNavigation");
                });

            modelBuilder.Entity("consultorio.Models.SureInsured", b =>
                {
                    b.HasOne("consultorio.Models.Insured", "Insured")
                        .WithMany("SureInsureds")
                        .HasForeignKey("Idinsured")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("consultorio.Models.Sure", "Sure")
                        .WithMany("SureInsureds")
                        .HasForeignKey("Idsure")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insured");

                    b.Navigation("Sure");
                });

            modelBuilder.Entity("consultorio.Models.Insured", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("SureInsureds");
                });

            modelBuilder.Entity("consultorio.Models.Sure", b =>
                {
                    b.Navigation("SureInsureds");
                });
#pragma warning restore 612, 618
        }
    }
}
